{"version":3,"sources":["components/Profile/Profile.module.scss","components/PagePhoto/PagePhoto.module.scss","components/NewPost/NewPost.module.scss","components/Post/Post.module.scss","components/PagePhoto/PagePhoto.js","components/PagePhoto/PagePhoto-container.js","components/AboutUser/AboutUser.js","components/AboutUser/AboutUser-container.js","components/NewPost/NewPost.js","components/NewPost/NewPost-container.js","components/Post/Post.js","components/Post/Post-container.js","components/PostsList/PostsList.js","components/PostsList/PostsList-container.js","components/ProfileStatus/ProfileStatus.js","components/ProfileStatus/ProfileStatus-container.js","components/Profile/Profile.js","components/Profile/Profile-container.js"],"names":["module","exports","PagePhoto","photo","isOwner","Handler","props","className","styles","src","alt","mainPhoto","htmlFor","selectBtnLabel","type","onChange","evt","mainPhotoSelected","id","selectBtn","savePhoto","Operation","compose","connect","state","target","files","AboutUser","children","memo","maxLength15","maxLengthCreator","NewPost","onSubmit","handleSubmit","alert","createField","required","text","btn","btn__text","addPost","Action","getAlert","initialValues","profile","reduxForm","form","enableReinitialize","newPostText","trim","Post","count","style","styleCount","onClick","onCount","likesCount","useState","isCount","setIsCount","background","PostsList","postsData","postItems","reverse","map","post","key","ProfileStatus","status","onStatusSave","statusLocal","editMode","onStatusChange","onEditModeToggle","tabIndex","onBlur","value","autoFocus","onMouseDown","putStatus","setEditMode","setStatusLocal","useEffect","Profile","userProfile","Preloader","aboutMe","photos","lookingForAJob","lookingForAJobDescription","contacts","info","large","posts","posts__title","getProfile","getStatus","setProfileId","authActionCreator","withRouter","authorizedUserId","auth","isHaveProfileId","isAuth","match","userId","params","to"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,oBCA1FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,UAAY,6BAA6B,eAAiB,oC,0CCA9JD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,wB,0CCAvFD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,sB,8HCgB/DC,G,OAZG,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAAYC,EAAW,6CACzD,OACE,6BAASC,UAAS,UAAKC,IAAON,UAAZ,YAAyBI,EAAMC,YAC/C,yBAAKE,IAAKN,GAAK,sCAA2CO,IAAI,gBAAgBH,UAAWC,IAAOG,YAC/FP,GACD,2BAAOQ,QAAO,YAAeL,UAAWC,IAAOK,gBAA/C,eACA,2BAAOC,KAAI,OAAUC,SAAU,SAACC,GAAD,OAASX,EAAQY,kBAAkBD,IAAME,GAAE,YAAeX,UAAWC,IAAOW,e,sBCJ1GC,EAAaC,IAAbD,UAwBQE,cACbC,aARsB,SAACC,GACvB,MAAO,KAOkB,CAACJ,cADbE,EArBY,SAAC,GAA2B,IAA1BF,EAAyB,EAAzBA,UAAcd,EAAW,6BAC9CD,EAAU,CACdY,kBAAmB,SAACD,GAClB,IAAMb,EAAQa,EAAIS,OAAOC,MAAM,GAC/BvB,GAASiB,EAAUjB,KAIvB,OACE,kBAAC,EAAD,eAAWE,QAASA,GAAaC,O,kBCNtBqB,EATG,SAACrB,GACjB,OACE,6BAASC,UAAWC,IAAOmB,WACxBrB,EAAMsB,WCaEN,cACbC,aARsB,SAACC,GACvB,MAAO,KAOkB,IACzBK,OAFaP,EAdY,SAAC,GAAgB,IAAZhB,EAAW,oBACzC,OACE,kBAAC,EAAcA,M,kCCDbwB,EAAcC,YAAiB,IAiBtBC,EAdC,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAqB,mDAC7D,OACE,0BAAM5B,UAAWC,IAAOwB,QAASC,SAAUC,EAAaD,IAErDG,YAAY,WAAD,cAA4B,CAACC,IAAUP,GAAvC,WAAiE,CAACvB,UAAWC,IAAO8B,OAC/FH,GAAS,2BAAIA,GACd,4BAAQ5B,UAAWC,IAAO+B,KACxB,0BAAMhC,UAAWC,IAAOgC,WAAxB,e,SCTDC,EAAWC,IAAXD,QACAE,EAAYtB,IAAZsB,SA0BQrB,cACbC,aARsB,SAACC,GAAD,MAAY,CAClCoB,cAAepB,EAAMqB,QACrBV,MAAOX,EAAMqB,QAAQV,SAMI,CAACM,UAASE,aACnCG,YAAU,CAACC,KAAM,UAAWC,oBAAqB,IACjDnB,OAHaP,EAvBU,SAAC,GAAmC,IAAlCmB,EAAiC,EAAjCA,QAASE,EAAwB,EAAxBA,SAAarC,EAAW,sCAU1D,OACE,kBAAC,EAAD,eAAS2B,SAVM,SAAC,GAAmB,IAAlBgB,EAAiB,EAAjBA,YACbA,EAAYC,OAGdT,EAAQQ,GAFRN,EAAS,0BAIXM,EAAc,KAImB3C,O,qDCTtB6C,EAVF,SAAC7C,GACZ,OACE,6BAASC,UAAWC,IAAO2C,MACzB,uBAAG5C,UAAWC,IAAO8B,MAAOhC,EAAMgC,MAClC,0BAAM/B,UAAWC,IAAO4C,MAAOC,MAAO/C,EAAMgD,WAAYC,QAASjD,EAAMkD,SAAUlD,EAAMmD,cCwC9EnC,cACbC,aA3CsB,SAACC,GACvB,MAAO,KA0CkB,IADZF,EApCO,SAAChB,GAAW,IAAD,EACDoD,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,KAyB3BN,EAAa,CACfO,WAtBGF,EACM,sBAEA,sBAsBX,OACE,kBAAC,EAAD,eAAMH,QAnBQ,WACXG,GACDL,EAAa,CACXO,WAAY,sBAEdD,GAAW,KAEXN,EAAa,CACXO,WAAY,uBAEdD,GAAW,KASWN,WAAYA,GAAgBhD,OCnBzCwD,EAlBG,SAACxD,GAAW,IACrByD,EAAazD,EAAbyD,UAEDC,EAAY,YAAID,GACnBE,UACAC,KAAI,SAACC,GAAD,OACH,kBAAC,EAAD,CAAMjD,GAAIiD,EAAKjD,GAAIoB,KAAM6B,EAAK7B,KAAMmB,WAAYU,EAAKV,WAAYW,IAAG,UAAKD,EAAKjD,SAGlF,OACE,6BAASX,UAAWC,IAAOsD,WACxBE,EACA1D,EAAMsB,WCLEN,cACbC,aARsB,SAACC,GACvB,MAAO,CACLuC,UAAWvC,EAAMqB,QAAQkB,aAMF,IADZzC,CAEbwC,G,kBCQaO,EAlBO,SAAC/D,GAAW,IACzBgE,EAAiFhE,EAAjFgE,OAAQC,EAAyEjE,EAAzEiE,aAAcC,EAA2DlE,EAA3DkE,YAAaC,EAA8CnE,EAA9CmE,SAAUC,EAAoCpE,EAApCoE,eAAgBC,EAAoBrE,EAApBqE,iBAGpE,OACE,6BAASpE,UAAWC,IAAO6D,eACvBI,EAEE,6BAASG,SAAS,IAAIC,OAAQF,GAC5B,2BAAO5D,SAAU2D,EAAgBI,MAAON,EAAaO,WAAS,IAC9D,4BAAQC,YAAaT,GAArB,SAHF,uBAAGhB,QAASoB,GAAmBL,GAAU,eCJ5CW,EAAa5D,IAAb4D,UAuCQ3D,cACbC,aARsB,SAACC,GACvB,MAAO,CACL8C,OAAQ9C,EAAMqB,QAAQyB,UAMC,CAACW,cADb3D,EApCgB,SAAC,GAAmC,IAAlCgD,EAAiC,EAAjCA,OAAQW,EAAyB,EAAzBA,UAAyB,yCAChCvB,oBAAS,IADuB,mBACzDe,EADyD,KAC/CS,EAD+C,OAE1BxB,mBAASY,GAFiB,mBAEzDE,EAFyD,KAE5CW,EAF4C,KAuBhE,OALAC,qBAAU,WACRD,EAAeb,KACd,CAACA,IAIF,kBAAC,EAAD,CAAeA,OAAQA,EAAQC,aAXZ,WACnBU,EAAUT,IAUiDA,YAAaA,EAAaC,SAAUA,EAAUC,eAnBpF,SAAC1D,GACtBmE,EAAenE,EAAIS,OAAOqD,QAkB+GH,iBAflH,WACvBO,GAAaT,S,QCoBFY,EA5BC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,YAAalF,EAAuB,EAAvBA,QAAuB,yCACpD,IAAIkF,EACF,OAAO,kBAACC,EAAA,EAAD,MAF2C,IAK7CC,EAAwEF,EAAxEE,QAASC,EAA+DH,EAA/DG,OAA+DH,EAAvDI,eAAuDJ,EAAvCK,0BAAuCL,EAAZM,SACnE,OACE,6BAASrF,UAAWC,IAAO6E,SACzB,wBAAI9E,UAAU,mBAAd,WACA,6BAASA,UAAWC,IAAOqF,MACzB,kBAAC,EAAD,CAAW1F,MAAOsF,EAAOK,MAAO1F,QAASA,IACzC,kBAAC,EAAD,KACE,wCAAcoF,GACd,kBAAC,EAAD,QAKJ,6BAASjF,UAAWC,IAAOuF,OACzB,wBAAIxF,UAAWC,IAAOwF,cAAtB,YACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,gBCxBDC,EAAyB5E,IAAzB4E,WAAYC,EAAa7E,IAAb6E,UAEZC,EAAgBC,IAAhBD,aA8BQ7E,sBACb+E,IACA9E,aAVsB,SAACC,GAAD,MAAY,CAClC8D,YAAa9D,EAAMqB,QAAQyC,YAC3BgB,iBAAkB9E,EAAM+E,KAAKrF,GAC7BsF,gBAAiBhF,EAAM+E,KAAKC,gBAC5BC,OAAQjF,EAAM+E,KAAKE,UAMM,CAACR,aAAYC,YAAWC,iBAFpC7E,EA3BU,SAAC,GAAgE,IAA/DoF,EAA8D,EAA9DA,MAAOT,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,UAAWI,EAAgC,EAAhCA,iBAAqBhG,EAAW,qEACjFqG,EAASD,EAAME,OAAOD,QAAUL,EAUtC,OARAlB,qBAAU,WAGRa,EAAWU,GACXT,EAAUS,KACT,CAACA,IAIFA,EACI,kBAAC,EAAD,eAASvG,SAAUsG,EAAME,OAAOD,QAAYrG,IAC5C,kBAAC,IAAD,CAAUuG,GAAI","file":"static/js/4.784d57ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__1mNL2\",\"info\":\"Profile_info__2rzxM\",\"posts\":\"Profile_posts__2IkuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PagePhoto\":\"PagePhoto_PagePhoto__45aOn\",\"mainPhoto\":\"PagePhoto_mainPhoto__1bdNK\",\"selectBtn\":\"PagePhoto_selectBtn__2fC0v\",\"selectBtnLabel\":\"PagePhoto_selectBtnLabel__3xhUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPost\":\"NewPost_NewPost__95W-C\",\"btn\":\"NewPost_btn__3jYlS\",\"text\":\"NewPost_text__2LZ2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__36ze9\",\"text\":\"Post_text__12yrs\",\"count\":\"Post_count__1E3O4\"};","import React from 'react'\r\nimport styles from './PagePhoto.module.scss'\r\nimport { findAllByLabelText } from '@testing-library/react';\r\n\r\n\r\nconst PagePhoto = ({photo, isOwner, Handler, ...props}) => {\r\n  return (\r\n    <section className={`${styles.PagePhoto} ${props.className}`}>\r\n      <img src={photo || `https://via.placeholder.com/200x300`} alt='profile image' className={styles.mainPhoto}/>\r\n      {isOwner &&\r\n      <label htmlFor={`selectBtn`} className={styles.selectBtnLabel}>select file</label>}\r\n      <input type={`file`} onChange={(evt) => Handler.mainPhotoSelected(evt)} id={`selectBtn`} className={styles.selectBtn}/>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default PagePhoto;","import React from 'react'\r\nimport PagePhoto from './PagePhoto'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport {Operation} from '../../redux/profileReducer'\r\n\r\n\r\nconst {savePhoto} = Operation\r\n\r\n\r\nconst PagePhotoContainer = ({savePhoto, ...props}) => {\r\n  const Handler = {\r\n    mainPhotoSelected: (evt) => {\r\n      const photo = evt.target.files[0]\r\n      photo && savePhoto(photo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PagePhoto Handler={Handler} {...props}/>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {savePhoto}),\r\n)(PagePhotoContainer)\r\n\r\n","import React from 'react'\r\nimport styles from './AboutUser.module.scss'\r\n\r\n\r\nconst AboutUser = (props) => {\r\n  return (\r\n    <section className={styles.AboutUser}>\r\n      {props.children}\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default AboutUser;","import React, {memo} from 'react'\r\nimport AboutUser from './AboutUser'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst AboutUserContainer = ({...props}) => {\r\n  return (\r\n    <AboutUser {...props}/>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n  memo,\r\n)(AboutUserContainer)\r\n\r\n","import React from 'react'\r\nimport styles from './NewPost.module.scss'\r\n// import {Field} from 'redux-form'\r\nimport {required, maxLengthCreator} from '../../utils/validators'\r\nimport {Component, createField} from '../../common/FormsControls/FormsControls'\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\n\r\nconst NewPost = ({onSubmit, handleSubmit, alert, ...props}) => {\r\n  return (\r\n    <form className={styles.NewPost} onSubmit={handleSubmit(onSubmit)}>\r\n      {/* <Field validate={[required, maxLength15]} component={Component.textarea} name='newPostText' className={styles.text}/> */}\r\n      {createField(`new post`, `newPostText`, [required, maxLength15], `textarea`, {className: styles.text})}\r\n      {alert && <p>{alert}</p>}\r\n      <button className={styles.btn}>\r\n        <span className={styles.btn__text}>Add post</span>\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default NewPost;","import React, {memo} from 'react'\r\nimport NewPost from './NewPost'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport {reduxForm} from 'redux-form'\r\nimport {Action, Operation} from '../../redux/profileReducer';\r\n\r\n\r\nconst {addPost} = Action\r\nconst {getAlert} = Operation\r\n\r\n\r\nconst NewPostContainer = ({addPost, getAlert, ...props}) => {\r\n  const onSubmit = ({newPostText}) => {\r\n    if(!newPostText.trim()) {\r\n      getAlert('message can\\'t be empty')\r\n    } else {\r\n      addPost(newPostText)\r\n    }\r\n    newPostText = ''\r\n  }\r\n\r\n  return (\r\n    <NewPost onSubmit={onSubmit} {...props}/>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialValues: state.profile,\r\n  alert: state.profile.alert,\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {addPost, getAlert}),\r\n  reduxForm({form: 'newPost', enableReinitialize : true}),\r\n  memo,\r\n)(NewPostContainer)","import React from 'react'\r\nimport styles from './Post.module.scss'\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <article className={styles.Post} >\r\n      <p className={styles.text}>{props.text}</p>\r\n      <span className={styles.count} style={props.styleCount} onClick={props.onCount}>{props.likesCount}</span>\r\n    </article>\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React, {useState} from 'react'\r\nimport Post from './Post'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst PostContainer = (props) => {\r\n  const [isCount, setIsCount] = useState(false); \r\n\r\n  const countToggle = () => {\r\n    if(isCount) {\r\n      return 'var(--accent_color)'\r\n    } else {\r\n      return 'var(--light_color)'\r\n    }\r\n  }\r\n\r\n  const onCount = () => {\r\n    if(isCount) {\r\n      styleCount = {\r\n        background: 'var(--light_color)'\r\n      } \r\n      setIsCount(false)\r\n    } else {\r\n      styleCount = {\r\n        background: 'var(--accent_color)'\r\n      } \r\n      setIsCount(true)\r\n    }\r\n  }\r\n\r\n  let styleCount = {\r\n    background: countToggle()\r\n  }\r\n\r\n  return (\r\n    <Post onCount={onCount} styleCount={styleCount} {...props}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(PostContainer)\r\n\r\n","import React from 'react'\r\nimport styles from './PostsList.module.scss'\r\nimport Post from '../Post/Post-container'\r\n\r\n\r\nconst PostsList = (props) => {\r\n  const {postsData} = props\r\n\r\n  const postItems = [...postsData]\r\n    .reverse()\r\n    .map((post) => (\r\n      <Post id={post.id} text={post.text} likesCount={post.likesCount} key={`${post.id}`}/>\r\n    ))\r\n\r\n  return (\r\n    <section className={styles.PostsList}>\r\n      {postItems}\r\n      {props.children}\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default PostsList;","import PostsList from './PostsList'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profile.postsData\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(PostsList)\r\n\r\n","import React from 'react'\r\nimport styles from './ProfileStatus.module.scss'\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n  const {status, onStatusSave, statusLocal, editMode, onStatusChange, onEditModeToggle} = props\r\n\r\n\r\n  return (\r\n    <section className={styles.ProfileStatus}>\r\n      {!editMode \r\n        ? <p onClick={onEditModeToggle}>{status || 'no status'}</p>\r\n        : <section tabIndex='1' onBlur={onEditModeToggle}>\r\n            <input onChange={onStatusChange} value={statusLocal} autoFocus/>\r\n            <button onMouseDown={onStatusSave}>save</button>\r\n          </section>\r\n      }      \r\n    </section>  \r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport {Operation} from '../../redux/profileReducer'\r\n\r\n\r\nconst {putStatus} = Operation\r\n\r\n\r\nconst ProfileStatusContainer = ({status, putStatus, ...props}) => {  \r\n  const [editMode, setEditMode] = useState(false)\r\n  const [statusLocal, setStatusLocal] = useState(status)\r\n  \r\n  \r\n  const onStatusChange = (evt) => {\r\n    setStatusLocal(evt.target.value)\r\n  }\r\n  \r\n  const onEditModeToggle = () => {\r\n    setEditMode(!editMode)\r\n  }\r\n  \r\n  const onStatusSave = () => {\r\n    putStatus(statusLocal)\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    setStatusLocal(status)\r\n  }, [status])\r\n  \r\n\r\n  return (\r\n    <ProfileStatus status={status} onStatusSave={onStatusSave} statusLocal={statusLocal} editMode={editMode} onStatusChange={onStatusChange} onEditModeToggle={onEditModeToggle}/>\r\n  )\r\n}\r\n  \r\n  \r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.profile.status,\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {putStatus}),\r\n)(ProfileStatusContainer)\r\n\r\n","import React from 'react'\r\nimport styles from './Profile.module.scss'\r\nimport PagePhoto from '../PagePhoto/PagePhoto-container'\r\nimport AboutUser from '../AboutUser/AboutUser-container'\r\nimport NewPost from '../NewPost/NewPost-container'\r\nimport PostsList from '../PostsList/PostsList-container'\r\nimport ProfileStatus from '../ProfileStatus/ProfileStatus-container'\r\n// import LookingForAJob from '../LookingForAJob/LookingForAJob-container'\r\n// import Contacts from '../Contacts/Contacts-container'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n\r\n\r\nconst Profile = ({userProfile, isOwner, ...props}) => {\r\n  if(!userProfile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  const {aboutMe, photos, lookingForAJob, lookingForAJobDescription, contacts} = userProfile\r\n  return (\r\n    <section className={styles.Profile}>\r\n      <h2 className='visually-hidden'>Profile</h2>\r\n      <section className={styles.info}>\r\n        <PagePhoto photo={photos.large} isOwner={isOwner}/>\r\n        <AboutUser>\r\n          <p>About me: {aboutMe}</p>\r\n          <ProfileStatus />\r\n          {/* <LookingForAJob lookingForAJob={lookingForAJob} lookingForAJobDescription={lookingForAJobDescription}/> */}\r\n          {/* <Contacts contacts={contacts}/> */}\r\n        </AboutUser>\r\n      </section>\r\n      <section className={styles.posts}>\r\n        <h3 className={styles.posts__title}>My posts</h3>\r\n        <NewPost />\r\n        <PostsList />\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default Profile;","import React, {useEffect} from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport {Operation} from '../../redux/profileReducer'\r\nimport {actionCreator as authActionCreator} from '../../redux/authReducer'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n\r\n\r\nconst {getProfile, getStatus} = Operation\r\n\r\nconst {setProfileId} = authActionCreator\r\n\r\n\r\nconst ProfileContainer = ({match, getProfile, getStatus, authorizedUserId, ...props}) => {\r\n  const userId = match.params.userId || authorizedUserId\r\n\r\n  useEffect(() => {\r\n    // let userId = match.params.userId || authorizedUserId || props.history.push('login');\r\n\r\n    getProfile(userId)\r\n    getStatus(userId)\r\n  }, [userId])\r\n  \r\n  \r\n  return (\r\n    userId\r\n      ? <Profile isOwner={!match.params.userId} {...props} />\r\n      : <Redirect to={'/login'} />\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userProfile: state.profile.userProfile,\r\n  authorizedUserId: state.auth.id,\r\n  isHaveProfileId: state.auth.isHaveProfileId,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getProfile, getStatus, setProfileId}),\r\n)(ProfileContainer)"],"sourceRoot":""}