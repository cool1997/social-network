{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.scss","components/DialogsList/DialogsList.module.scss","components/Dialog/Dialog.module.scss","components/NewMessage/NewMessage.module.scss","components/Message/Message.module.scss","components/Dialog/Dialog.js","components/Dialog/Dialog-container.js","components/DialogsList/DialogsList.js","components/DialogsList/DialogsList-container.js","components/NewMessage/NewMessage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/NewMessage/NewMessage-container.js","components/Message/Message.js","components/Message/Message-container.js","components/MessageList/MessageList.js","components/MessageList/MessageList-container.js","components/Dialogs/Dialogs.js","components/Dialogs/Dialogs-container.js"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Dialog","id","className","styles","activeClassName","active","text","userName","compose","DialogsList","dialogItems","usersData","map","user","name","key","children","dialogs","maxLength50","maxLengthCreator","NewMessage","obj","TypeError","onSubmit","handleSubmit","Field","validate","required","component","textarea","placeholder","btn","reduxForm","form","Message","myMessage","friendMessage","MessageList","messagesItems","messagesData","message","Dialogs","messages","addMessage","actionCreator","formData","newMessageText"],"mappings":"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","file":"static/js/5.1c7ac252.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    const {isAuth} = props\r\n\r\n    if(!isAuth) return <Redirect to=\"/login\"/>\r\n    return <Component {...props}/>\r\n\r\n  }\r\n  return connect(mapStateToProps, {})(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__3NoO5\",\"messages\":\"Dialogs_messages__1J3nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsList\":\"DialogsList_DialogsList__1YLFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"Dialog_Dialog__2u0-h\",\"active\":\"Dialog_active__2IlEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewMessage\":\"NewMessage_NewMessage__3Mxby\",\"text\":\"NewMessage_text__M1f4_\",\"btn\":\"NewMessage_btn__17i3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2fF6f\",\"myMessage\":\"Message_myMessage__2Ib4E\"};","import React from 'react'\r\nimport styles from './Dialog.module.scss'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Dialog = (props) => {\r\n  return (\r\n    <NavLink to={`/dialogs/${props.id}`} className={styles.Dialog} activeClassName={styles.active}>\r\n      <span className={styles.text}>{props.userName}</span>\r\n    </NavLink>\r\n  )\r\n}\r\n\r\n\r\nexport default Dialog;","import Dialog from './Dialog'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(Dialog)\r\n\r\n","import React from 'react'\r\nimport styles from './DialogsList.module.scss'\r\nimport Dialog from '../Dialog/Dialog-container'\r\n\r\n\r\nconst DialogsList = (props) => {\r\n  const {usersData} = props\r\n  \r\n  const dialogItems = usersData.map((user) => {\r\n    return(\r\n      <Dialog userName={user.name} id={user.id} key={`${user.name}${user.id}`}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <section className={styles.DialogsList}>\r\n      {dialogItems}\r\n      {props.children}\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogsList;","import DialogsList from './DialogsList'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersData: state.dialogs.usersData\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(DialogsList)\r\n\r\n","import React from 'react'\r\nimport styles from './NewMessage.module.scss'\r\nimport {Field} from 'redux-form'\r\nimport {required, maxLengthCreator} from '../../utils/validators'\r\nimport {Component} from '../../common/FormsControls/FormsControls'\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\n\r\nconst NewMessage = (props) => {\r\n  const {} = props\r\n\r\n  return (\r\n    <form className={styles.NewMessage} onSubmit={props.handleSubmit}>\r\n      <Field validate={[required, maxLength50]} name='newMessageText' component={Component.textarea} placeholder='Enter your massage' className={styles.text}/>\r\n      <button className={styles.btn}>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default NewMessage;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import NewMessage from './NewMessage'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport {reduxForm} from 'redux-form'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  reduxForm({form: 'newMessage'}),\r\n  connect(mapStateToProps, {}),\r\n)(NewMessage)\r\n\r\n","import React from 'react'\r\nimport styles from './Message.module.scss'\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <section className={`${styles.Message} ${props.myMessage ? styles.myMessage : styles.friendMessage}`}>\r\n      <p id={props.id}>{props.text}</p>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default Message;","import Message from './Message'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(Message)\r\n\r\n","import React from 'react'\r\nimport styles from './MessageList.module.scss'\r\nimport Message from '../Message/Message-container'\r\n\r\n\r\nconst MessageList = (props) => {\r\n  const {messagesData} = props\r\n\r\n  const messagesItems = messagesData.map((message) => {\r\n    return (\r\n      <Message id={message.id} text={message.text} myMessage={message.myMessage} key={message.id}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <section className={styles.MessageList}>\r\n      {messagesItems}\r\n      {props.children}\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default MessageList;","import MessageList from './MessageList'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesData: state.dialogs.messagesData\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n)(MessageList)\r\n\r\n","import React from 'react'\r\nimport styles from './Dialogs.module.scss'\r\nimport DialogsList from '../DialogsList/DialogsList-container'\r\nimport NewMessage from '../NewMessage/NewMessage-container'\r\nimport MessageList from '../MessageList/MessageList-container'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  const {onSubmit} = props\r\n\r\n  return (\r\n    <section className={styles.Dialogs}>\r\n      <h2 className='visually-hidden'>Messages</h2>\r\n      <DialogsList />\r\n      <section className={styles.messages}>\r\n        <MessageList />\r\n        <NewMessage onSubmit={onSubmit}/>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {actionCreator} from '../../redux/dialogsReducer'\r\n\r\n\r\nconst {addMessage} = actionCreator\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n  const {addMessage} = props\r\n\r\n  const onSubmit = (formData) => {\r\n    addMessage(formData.newMessageText)\r\n    formData.newMessageText = ''\r\n  }\r\n\r\n  return (\r\n    <Dialogs onSubmit={onSubmit} {...props}/>\r\n  )\r\n}\r\n\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, {addMessage}),\r\n)(DialogsContainer)\r\n\r\n"],"sourceRoot":""}